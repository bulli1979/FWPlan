<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>me.fw.FwPlan</groupId>
	<artifactId>FWPlan</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<properties>
		<junitVersion>4.12</junitVersion>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<javafx.version>2.2</javafx.version>
	</properties>
	<developers>
		<developer>
			<id>meb</id>
			<name>Mirko Eberlein</name>
			<email>mirko.eberlein@webgate.biz</email>
		</developer>
		<developer>
			<id>sir</id>
			<name>Simon Reinhart</name>
		</developer>
	</developers>
	<build>
		<plugins>
			<plugin>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.5.1</version>
				<configuration>
					<source>1.8</source>
					<target>1.8</target>
				</configuration>
			</plugin>
			<plugin>
				<!-- copy all dependencies of your app to target folder -->
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<version>2.3</version>
				<executions>
					<execution>
						<id>copy-dependencies</id>
						<phase>package</phase>
						<configuration>
							<overWriteReleases>false</overWriteReleases>
							<overWriteSnapshots>false</overWriteSnapshots>
							<overWriteIfNewer>true</overWriteIfNewer>
						</configuration>
						<goals>
							<goal>copy-dependencies</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<configuration>
					<archive>
						<manifestEntries>
							<JavaFX-Version>${javafx.version}+</JavaFX-Version>
							<Main-Class>org.jacp.demo.MyMain</Main-Class>
							<implementation-version>1.0</implementation-version>
							<JavaFX-Application-Class>org.jacp.demo.MyMain</JavaFX-Application-Class>
							<JavaFX-Class-Path>
								<!-- list all your dependencies here -->
								myDep1.jar myDep2.jar
							</JavaFX-Class-Path>
							<!-- The artifactId (name) of the jfxrt.jar ... see dependency system 
								scope -->
							<Class-Path>javafx-${javafx.version}.jar</Class-Path>
						</manifestEntries>
						<manifest>
							<addClasspath>true</addClasspath>
						</manifest>
					</archive>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-antrun-plugin</artifactId>
				<version>1.6</version>
				<executions>
					<execution>
						<phase>package</phase>
						<configuration>
							<target>
								<!-- define the deploy ANT task -->
								<taskdef name="jfxdeploy"
									classname="com.sun.javafx.tools.ant.DeployFXTask"
									classpathref="maven.plugin.classpath" />
								<!-- define the JarSing ANT task -->
								<taskdef name="jfxsignjar"
									classname="com.sun.javafx.tools.ant.FXSignJarTask"
									classpathref="maven.plugin.classpath" />
								<jfxdeploy width="1024" height="768"
									outdir="${project.build.directory}/deploy"
									outfile="${build.finalName}" nativeBundles="all">
									<info title="${project.name}" />
									<!-- set the main class of your applcation; I had to create a Main.class 
										(class Main extends MyMain) otherwise it will return an error on start -->
									<application name="${project.name}"
										mainClass="com.javafx.main.Main" />
									<resources>
										<fileset dir="${project.build.directory}"
											includes="*.jar" />
										<fileset dir="${project.build.directory}/dependency"
											includes="*.jar" />
									</resources>
									<!-- set your jvm args -->
									<platform javafx="${javafx.version}+">
										<jvmarg value="-Xms512m" />
										<jvmarg value="-Xmx1024m" />
									</platform>
								</jfxdeploy>
								<!-- you need to generate a key yourself -->
								<jfxsignjar
									destdir="${project.build.directory}/deploy"
									keyStore="path/to/your/keystore" storePass="yourPass"
									alias="yourAlias" keyPass="keyPass">
									<fileset dir="${project.build.directory}/deploy"
										includes="*.jar" />
								</jfxsignjar>
							</target>
						</configuration>
						<goals>
							<goal>run</goal>
						</goals>
					</execution>
				</executions>
				<dependencies>
					<dependency>
						<groupId>com.oracle</groupId>
						<artifactId>ant-javafx</artifactId>
						<version>${javafx.version}</version>
						<systemPath>${java.home}/../lib/ant-javafx.jar</systemPath>
						<scope>system</scope>
					</dependency>
					<dependency>
						<groupId>com.oracle</groupId>
						<artifactId>javafx</artifactId>
						<version>${javafx.version}</version>
						<systemPath>${java.home}/lib/jfxrt.jar</systemPath>
						<scope>system</scope>
					</dependency>
				</dependencies>
			</plugin>
			<plugin>
				<groupId>com.zenjava</groupId>
				<artifactId>javafx-maven-plugin</artifactId>
				<version>1.3</version>
				<configuration>
					<mainClass>[put your application main class here]</mainClass>
				</configuration>
			</plugin>
		</plugins>
	</build>
	<dependencies>
		<dependency>
			<groupId>org.apache.pdfbox</groupId>
			<artifactId>pdfbox</artifactId>
			<version>2.0.8</version>
		</dependency>
		<dependency>
			<groupId>org.xerial</groupId>
			<artifactId>sqlite-jdbc</artifactId>
			<version>3.8.11.2</version>
		</dependency>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<scope>test</scope>
			<version>${junitVersion}</version>
		</dependency>
		
	</dependencies>
</project>